/*(c) Copyright 2015 Pivotal Software, Inc. All Rights Reserved.*/
'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var React = require('react');
var classnames = require('classnames');

var shortSizes = { xsmall: 'xs', small: 'sm', medium: 'md', large: 'lg', xlarge: 'xl' };
var charSizes = { small: 's', medium: 'm', large: 'l', xlarge: 'xl' };
var paddingDirection = { left: 'r', right: 'l' };

var Media = React.createClass({
  displayName: 'Media',

  propTypes: {
    image: React.PropTypes.node.isRequired,
    innerClassName: React.PropTypes.string,
    mediaSpacing: React.PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']),
    stackSize: React.PropTypes.oneOf(['xsmall', 'small', 'medium', 'large']),
    vAlign: React.PropTypes.oneOf(['middle', 'bottom']),
    placement: React.PropTypes.oneOf(['left', 'right']),
    className: React.PropTypes.string
  },

  getDefaultProps: function getDefaultProps() {
    return {
      placement: 'left'
    };
  },
  render: function render() {
    var _props = this.props;
    var className = _props.className;
    var innerClassName = _props.innerClassName;
    var image = _props.image;
    var mediaSpacing = _props.mediaSpacing;
    var stackSize = _props.stackSize;
    var vAlign = _props.vAlign;
    var placement = _props.placement;
    var children = _props.children;

    var other = _objectWithoutProperties(_props, ['className', 'innerClassName', 'image', 'mediaSpacing', 'stackSize', 'vAlign', 'placement', 'children']);

    var vAlignClass = vAlign && 'media-' + vAlign;

    var classes = classnames('media', stackSize && 'media-stackable-' + shortSizes[stackSize], className);

    var bodyClasses = classnames('media-body', vAlignClass, innerClassName);

    var mediaClasses = classnames('media-' + placement, vAlignClass, 'p' + paddingDirection[placement] + charSizes[mediaSpacing]);

    var content = [React.createElement(
      'div',
      { key: 0, className: mediaClasses },
      image
    ), React.createElement(
      'div',
      { key: 1, className: bodyClasses },
      children
    )];

    if (placement === 'right') {
      content.reverse();
    }

    return React.createElement(
      'div',
      _extends({}, other, { className: classes }),
      content
    );
  }
});

var Flag = React.createClass({
  displayName: 'Flag',
  render: function render() {
    return React.createElement(Media, _extends({}, this.props, { vAlign: 'middle' }));
  }
});

module.exports = { Media: Media, Flag: Flag };